[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="LostZombie"
+FallbackExclusionList="LostZombieHuman"

[XComGame.X2AIBTBehaviorTree]

; The Lost - group movement and group attack.  Only the leader of the group dictates the group actions to take.
;  Lost behavior is primarily handled in script, to allow all lost to move simultaneously, 
;   followed by the lost simultaneously attacking each target.
+Behaviors=(BehaviorName="TheLostNew::CharacterRoot", NodeType=Selector, \\
		Child[0]=LostHowlerBranchNew, \\
		Child[1]=LostBurningSequence, \\
		Child[2]=LostGreenAlertBehavior, \\
		Child[3]=LostActiveBehavior, \\
		Child[4]=SkipMove)
	
+Behaviors=(BehaviorName=LostBurningSequence, NodeType=Sequence, Child[0]=AffectedByEffect-Burning, Child[1]=LostBurningRoot)
+Behaviors=(BehaviorName=AffectedByEffect-Burning, NodeType=Condition)
+Behaviors=(BehaviorName=NotBurning, NodeType=Inverter, Child[0]=AffectedByEffect-Burning)
+Behaviors=(BehaviorName=LostGreenAlertBehavior, NodeType=Sequence, Child[0]=IsGreenAlert, Child[1]=SkipMove)
+Behaviors=(BehaviorName=LostActiveBehavior, NodeType=Sequence, Child[0]=IsNotGreenAlert, Child[1]=GroupWideExcludeEffect-Burning, Child[2]=LostActiveSelector)
+Behaviors=(BehaviorName=GroupWideExcludeEffect-Burning, NodeType=Action)
+Behaviors=(BehaviorName=LostActiveSelector, NodeType=Selector, \\
		Child[0]=LostHuntingGroupMove, \\
		Child[1]=LostHuntingTargetAttack )		
		
; While dazed and in green alert, the lost do nothing.  If in yellow/red alert, they will always approach
+Behaviors=(BehaviorName=IsNotGreenAlert, NodeType=Inverter, Child[0]=IsGreenAlert)

; Using LostHowlerAbility to determine if the lost unit is the howler, instead of checking all variants of Howler names (TheLostHowlerHP4/TheLostHowlerHP5/etc...)
+Behaviors=(BehaviorName=LostHowlerBranchNew, NodeType=Sequence, Child[0]=IsAbilityReady-LostHowl, Child[1]=IsAbilityAvailable-LostHowl, Child[2]=IsAloneOrWithOneAlly, Child[3]=MultipleEnemiesVisible, Child[4]=SelectAbility-LostHowl)
	
+Behaviors=(BehaviorName=IsAloneOrWithOneAlly, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]="<=", Param[2]=1)
+Behaviors=(BehaviorName=IsAbilityReady-LostHowl, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-LostHowl, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LostHowl, NodeType=Action)

+Behaviors=(BehaviorName=LostHuntingGroupMove, NodeType=Action)
+Behaviors=(BehaviorName=LostScamperMove, NodeType=Action)
+Behaviors=(BehaviorName=LostHuntingTargetAttack, NodeType=Action)

+Behaviors=(BehaviorName=TheLostScamperRoot, NodeType=Selector, Child[0]=SkipIfLostScampered, Child[1]=LostScamperMove)
+Behaviors=(BehaviorName=SkipIfLostScampered, NodeType=Sequence, Child[0]=HasLostGroupScampered, Child[1]=SkipMove)
+Behaviors=(BehaviorName=HasLostGroupScampered, NodeType=Condition)

+Behaviors=(BehaviorName=SelectAbility-LostAttack, NodeType=Action)

; Lost catching fire effect behavior
+Behaviors=(BehaviorName=LostBurningRoot, NodeType=Selector, Child[0]=ChanceRunToOtherLost, Child[1]=RandomMovement, Child[2]=SkipMove)
+Behaviors=(BehaviorName=SetDestinationNextToUnburnedTeammate, NodeType=Action)
+Behaviors=(BehaviorName=ChanceRunToOtherLost, NodeType=RandFilter, Child[0]=RunToOtherLost, Param[0]=50)
+Behaviors=(BehaviorName=RunToOtherLost, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=SetDestinationNextToUnburnedTeammate, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=RandomMovement, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=SelectRandomDestination, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=SelectRandomDestination, NodeType=Sequence, Child[0]=SSSetRandomDirValueIfUnset, Child[1]=SelectDestinationFromRandomDir)
+Behaviors=(BehaviorName=SelectDestinationFromRandomDir, NodeType=Action)
+Behaviors=(BehaviorName=SSSetRandomDirValueIfUnset, NodeType=Successor, Child[0]=SetRandomDirValueIfUnset)
+Behaviors=(BehaviorName=SetRandomDirValueIfUnset, NodeType=Sequence, Child[0]=RandomDirValueUnset, Child[1]=SetRandUnitValue-RandomDir)
+Behaviors=(BehaviorName=RandomDirValueUnset, NodeType=Inverter, Child[0]=HasUnitValue-RandomDir)
+Behaviors=(BehaviorName=HasUnitValue-RandomDir, NodeType=Condition)
+Behaviors=(BehaviorName=SetRandUnitValue-RandomDir, NodeType=Action, Param[0]=65535, Param[1]=1) ;Set a random yaw direction
