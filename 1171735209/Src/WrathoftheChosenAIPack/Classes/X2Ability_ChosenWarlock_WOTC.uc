class X2Ability_ChosenWarlock_WOTC extends X2Ability_ChosenWarlock config(GameData_SoldierSkills);

static function X2DataTemplate CreateCorress(name AbilityTemplateName, name UnitToSpawn)
{
	local X2AbilityTemplate Template;
	local X2AbilityCost_ActionPoints ActionPointCost;
	local X2AbilityCooldown_LocalAndGlobal Cooldown;
	local X2Effect_SpawnSpectralZombies SpawnZombieEffect;
	local array<name> SkipExclusions;

	`CREATE_X2ABILITY_TEMPLATE(Template, AbilityTemplateName);

	Template.Hostility = eHostility_Neutral;
	Template.IconImage = "img:///UILibrary_XPACK_Common.PerkIcons.UIPerk_corrupt";
	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_AlwaysShow;
	Template.AbilitySourceName = 'eAbilitySource_Standard';
	Template.Hostility = eHostility_Neutral;
	
	Template.AdditionalAbilities.AddItem('RemoveSpectralZombies');

	ActionPointCost = new class'X2AbilityCost_ActionPoints';
	ActionPointCost.iNumPoints = default.CORRESS_ACTIONPOINTCOST;
	Template.AbilityCosts.AddItem(ActionPointCost);

	Cooldown = new class'X2AbilityCooldown_LocalAndGlobal';
	Cooldown.iNumTurns = default.CORRESS_COOLDOWN_LOCAL;
	Cooldown.NumGlobalTurns = default.CORRESS_COOLDOWN_GLOBAL;
	Template.AbilityCooldown = Cooldown;

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.PlayerInputTrigger);

	// Shooter Conditions
	//
	Template.AbilityShooterConditions.AddItem(default.LivingShooterProperty);
	
	SkipExclusions.AddItem(class'X2StatusEffects'.default.BurningName);
	SkipExclusions.AddItem(class'X2AbilityTemplateManager'.default.DisorientedName);
	Template.AddShooterEffectExclusions(SkipExclusions);

	Template.AbilityShooterConditions.AddItem(new class'X2Condition_UnblockedNeighborTile');

	SpawnZombieEffect = new class'X2Effect_SpawnSpectralZombies_WOTC';
	SpawnZombieEffect.UnitToSpawnName = UnitToSpawn;
	Template.AddTargetEffect(SpawnZombieEffect);

	Template.bShowActivation = true;
	Template.bFrameEvenWhenUnitIsHidden = true;

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = Corress_BuildVisualization;

	//BEGIN AUTOGENERATED CODE: Template Overrides 'Corress'
	//BEGIN AUTOGENERATED CODE: Template Overrides 'CorressM2'
	//BEGIN AUTOGENERATED CODE: Template Overrides 'CorressM3'
	//BEGIN AUTOGENERATED CODE: Template Overrides 'CorressM4'
	Template.CustomFireAnim = 'HL_Corrupt';
	//END AUTOGENERATED CODE: Template Overrides 'CorressM4'
	//END AUTOGENERATED CODE: Template Overrides 'CorressM3'
	//END AUTOGENERATED CODE: Template Overrides 'CorressM2'
	//END AUTOGENERATED CODE: Template Overrides 'Corress'

	Template.CinescriptCameraType = "Warlock_SpectralZombie";

	return Template;
}

static function X2DataTemplate CreateSpectralArmy(name AbilityTemplateName, name UnitToSpawnName)
{
	local X2AbilityTemplate Template;
	local X2AbilityCost_ActionPoints ActionPointCost;
	local X2AbilityCooldown_LocalAndGlobal Cooldown;
	local X2Effect_Stasis StasisEffect;
	local X2Effect_SpawnSpectralArmy SpawnArmyEffect;
	local array<name> SkipExclusions;

	`CREATE_X2ABILITY_TEMPLATE(Template, AbilityTemplateName);

	Template.Hostility = eHostility_Neutral;
	Template.IconImage = "img:///UILibrary_XPACK_Common.PerkIcons.UIPerk_spectralarmy";
	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_AlwaysShow;
	Template.AbilitySourceName = 'eAbilitySource_Standard';
	Template.Hostility = eHostility_Neutral;

	Template.AdditionalAbilities.AddItem('EndSpectralArmy');

	ActionPointCost = new class'X2AbilityCost_ActionPoints';
	ActionPointCost.iNumPoints = default.SPECTRALARMY_ACTIONPOINTCOST;
	Template.AbilityCosts.AddItem(ActionPointCost);

	Cooldown = new class'X2AbilityCooldown_LocalAndGlobal';
	Cooldown.iNumTurns = default.SPECTRALARMY_COOLDOWN_LOCAL;
	Cooldown.NumGlobalTurns = default.SPECTRALARMY_COOLDOWN_GLOBAL;
	Template.AbilityCooldown = Cooldown;

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.PlayerInputTrigger);

	// Shooter Conditions
	Template.AbilityShooterConditions.AddItem(default.LivingShooterProperty);
	
	SkipExclusions.AddItem(class'X2StatusEffects'.default.BurningName);
	SkipExclusions.AddItem(class'X2AbilityTemplateManager'.default.DisorientedName);
	Template.AddShooterEffectExclusions(SkipExclusions);

	Template.AbilityShooterConditions.AddItem(new class'X2Condition_UnblockedNeighborTile');

	SpawnArmyEffect = new class'X2Effect_SpawnSpectralArmy_WOTC';
	SpawnArmyEffect.UnitToSpawnName = UnitToSpawnName;
	Template.AddTargetEffect(SpawnArmyEffect);

	StasisEffect = new class'X2Effect_Stasis';
	StasisEffect.BuildPersistentEffect(default.SPECTRALARMY_NUM_TURNS, false, false, false, eGameRule_PlayerTurnBegin);
	StasisEffect.bUseSourcePlayerState = true;
	StasisEffect.bRemoveWhenTargetDies = true;          //  probably shouldn't be possible for them to die while in stasis, but just in case
	StasisEffect.SetDisplayInfo(ePerkBuff_Bonus, Template.LocFriendlyName, Template.GetMyHelpText(), Template.IconImage);
	StasisEffect.StunStartAnim = 'HL_SpectralArmy_Stop';
	StasisEffect.StartAnimBlendTime = default.SPECTRALARMY_STOP_BLEND_TIME_S;
	StasisEffect.StunStopAnim = 'HL_SpectralArmy_End';
	StasisEffect.CustomIdleOverrideAnim = 'HL_SpectralArmy_Idle';
	StasisEffect.bSkipFlyover = true;
	StasisEffect.EffectRemovedFn = SpawnSpectralArmyEffect_Removed;
	Template.AddTargetEffect(StasisEffect);

	Template.PostActivationEvents.AddItem(class'X2Effect_Sustain'.default.SustainTriggeredEvent);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = TypicalAbility_BuildVisualization;

//BEGIN AUTOGENERATED CODE: Template Overrides 'SpectralArmy'
//BEGIN AUTOGENERATED CODE: Template Overrides 'SpectralArmyM2'
//BEGIN AUTOGENERATED CODE: Template Overrides 'SpectralArmyM3'
//BEGIN AUTOGENERATED CODE: Template Overrides 'SpectralArmyM4'
	Template.bShowActivation = true;
	Template.bSkipExitCoverWhenFiring = true;
	Template.bFrameEvenWhenUnitIsHidden = true;
	Template.ActionFireClass = class'XComGame.X2Action_Fire_SpectralArmy';
	Template.CinescriptCameraType = "ChosenWarlock_SpectralArmy";
//END AUTOGENERATED CODE: Template Overrides 'SpectralArmyM4'
//END AUTOGENERATED CODE: Template Overrides 'SpectralArmyM3'
//END AUTOGENERATED CODE: Template Overrides 'SpectralArmyM2'
//END AUTOGENERATED CODE: Template Overrides 'SpectralArmy'

	return Template;
}