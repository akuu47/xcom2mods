[ComplicatedRedFog.X2DownloadableContentInfo_ComplicatedRedFog]
DLCIdentifier="ComplicatedRedFog"

;;;hardmode: Red Fog only applies to XCOM
bOnlyXcom=false

;;;arrImmuneToRedFog checks for either the charactergroupname or the dataname
;;;chosen
;+arrImmuneToRedFog=ChosenAssassin
;+arrImmuneToRedFog=ChosenWarlock
;+arrImmuneToRedFog=ChosenSniper
;;;avatars
;+arrImmuneToRedFog=AdvPsiWitchM2
;+arrImmuneToRedFog=AdvPsiWitchM3
;;;rulers
;+arrImmuneToRedFog=ArchonKing
;+arrImmuneToRedFog=ViperKing
;+arrImmuneToRedFog=BerserkerQueen
;;;julian
;+arrImmuneToRedFog=Sectopod_Markov

;;;common bosses and special enemies that for balance warrant immunity. 
;;late game is too easy in vanilla as it is.
;+arrImmuneToRedFog=Sectopod
;+arrImmuneToRedFog=Gatekeeper
;;badly need their mobility to be a threat, and they're blitzed on combat stims anyway.
;+arrImmuneToRedFog=Berserker
;;Splitting mechanic is too easy with red fog making them weak.
;+arrImmuneToRedFog=Cyberus

;;generals need to be declared by dataname because their group name is shared with Captains.
;;balance-wise similar to Berserkers, they need their mobility to be a threat (of escape). Bring flashbangs.
;+arrImmuneToRedFog=AdvGeneralM1
;+arrImmuneToRedFog=AdvGeneralM2
;+arrImmuneToRedFog=AdvGeneralM3


;;;easymode: red fog does not apply to XCOM
;+arrImmuneToRedFog=Soldier
;+arrImmuneToRedFog=ReaperSoldier
;+arrImmuneToRedFog=SkirmisherSoldier
;+arrImmuneToRedFog=TemplarSoldier
;+arrImmuneToRedFog=SparkSoldier

;;;Add datanames or charactergroupnames here to render them susceptible to red fog, superseding any of the above settings.
;;Useful if you want onlyxcom except for a few specific enemies, or if you have a mod that adds new allied species that are not caught by onlyxcom setting.
;+arrAddUnimmune=???

[ComplicatedRedFog.X2Ability_RedFogAbilities]
;How many different tiers or levels of red fog do you want to have? Max 99 to cover all percentage values 1-99
;formula is 99/NumBreakPoints to determine the range of each breakpoint of red fog
NumBreakPoints=20
;;;bPercentage is whether penalties use addition or multiplication.

;;;Match the array indices, but can be any of the available stats (scroll down for list) and as many stats as one likes.
; This mod uses a linear formula, the severe effect is the lowest possible effect when health % is at 1 for %
; When setting bPercentage to false the SevereEffect has to be a negative number, See example below 
StatList[0]=eStat_Mobility
SevereEffect[0]=0.50
bPercentage[0]=true
FriendlyName[0]=eStat_Mobility

StatList[1]=eStat_Offense
SevereEffect[1]=-55
bPercentage[1]=false
FriendlyName[1]=eStat_Offense

StatList[2]=eStat_Will
SevereEffect[2]=0.60
bPercentage[2]=true
FriendlyName[2]=eStat_Will

StatList[3]=eStat_PsiOffense
SevereEffect[3]=0.60
bPercentage[3]=true
FriendlyName[3]=eStat_PSIOffense

StatList[4]=eStat_Hacking
SevereEffect[4]=0.60
bPercentage[4]=true
FriendlyName[4]=eStat_Hacking

StatList[5]=eStat_Defense
SevereEffect[5]=0.40
bPercentage[5]=true
FriendlyName[5]=eStat_Defense

StatList[6]=eStat_Dodge
SevereEffect[6]=0.40
bPercentage[6]=true
FriendlyName[6]=eStat_Dodge

;Example of how to use addition by setting bPercentage to false and using a negative number

;StatList[0]=eStat_Mobility
;SevereEffect[0]=-7
;bPercentage[0]=false
;FriendlyName[0]=eStat_Mobility


;eStat_Invalid, // invalid
;eStat_UtilityItems, // deprecated
;eStat_HP,
;eStat_Offense,
;eStat_Defense,
;eStat_Mobility,
;eStat_Will,
;eStat_Hacking,              // Used in calculating chance of success for hacking attempts. Dont use this for redfog
;eStat_SightRadius, // 'blind' = 8, normal = 27
;eStat_FlightFuel, //deprecated
;eStat_AlertLevel,
;eStat_BackpackSize, //deprecated
;eStat_Dodge,
;eStat_ArmorChance,          //  DEPRECATED - armor will always be used regardless of this value
;eStat_ArmorMitigation,      
;eStat_ArmorPiercing,
;eStat_PsiOffense,
;eStat_HackDefense,          // Units use this when defending against hacking attempts.
;eStat_DetectionRadius,     // The radius at which this unit will detect other concealed units.                             Overall Detection Range = 
;eStat_DetectionModifier,   // The modifier this unit will apply to the range at which other units can detect this unit.    Detector.DetectionRadius * (1.0 - Detectee.DetectionModifier)
;eStat_CritChance,
;eStat_Strength, // used by lancers to calculate their melee attacks status effect result
;eStat_SeeMovement,
;eStat_HearingRadius,
;eStat_CombatSims,
;eStat_FlankingCritChance,
;eStat_ShieldHP,
;eStat_Job, // deprecated
;eStat_FlankingAimBonus,