class X2Ability_ReflexTrigger extends X2Ability
	dependson(XComGameStateContext_Ability) config(GameData_SoldierSkills);



static function array<X2DataTemplate> CreateTemplates()
{
	local array<X2DataTemplate> Templates;

	Templates.AddItem(ReflexTrigger());

	
	return Templates;
}



static function X2AbilityTemplate ReflexTrigger()
{
	local X2AbilityTemplate						Template;
	local X2Effect_NewReflex					ReflexEffect;
	local X2Condition_UnitEffects			UnitEffects;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'SkirmisherReflexTrigger');
	Template.RemoveTemplateAvailablility(Template.BITFIELD_GAMEAREA_Multiplayer);

	Template.IconImage = "img:///UILibrary_XPACK_Common.PerkIcons.UIPerk_reflex";
	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_NeverShow;
	Template.Hostility = eHostility_Defensive;

	Template.AbilityShooterConditions.AddItem(default.LivingShooterProperty);

	UnitEffects = new class'X2Condition_UnitEffects';
	UnitEffects.AddExcludeEffect(class'X2AbilityTemplateManager'.default.StunnedName, 'AA_UnitIsStunned');
	Template.AbilityShooterConditions.AddItem(UnitEffects);

	Template.AbilityToHitCalc = default.DeadEye;                //  the real roll is in the effect apply chance
	Template.AbilityTargetStyle = default.SelfTarget;

	Template.AbilityTriggers.AddItem(new class'X2AbilityTrigger_Placeholder');

	//Template.AbilityTargetConditions.AddItem(default.LivingHostileUnitDisallowMindControlProperty);

	ReflexEffect = new class'X2Effect_NewReflex';
	ReflexEffect.BuildPersistentEffect(2, false, true, false, eGameRule_PlayerTurnBegin);
	//ReflexEffect.SetDisplayInfo(ePerkBuff_Passive, Template.LocFriendlyName, Template.LocLongDescription, Template.IconImage, true, , Template.AbilitySourceName);
	Template.AddTargetEffect(ReflexEffect);

	//Template.CustomFireAnim = 'NO_Intimidate';
	Template.bShowActivation = true;
	Template.bSkipFireAction = true;
	//Template.CinescriptCameraType = "Spark_Intimidate";
	Template.ActivationSpeech = 'Reflex';

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = TypicalAbility_BuildVisualization;

//BEGIN AUTOGENERATED CODE: Template Overrides 'IntimidateTrigger'
	Template.bFrameEvenWhenUnitIsHidden = true;
//END AUTOGENERATED CODE: Template Overrides 'IntimidateTrigger'

	return Template;
}