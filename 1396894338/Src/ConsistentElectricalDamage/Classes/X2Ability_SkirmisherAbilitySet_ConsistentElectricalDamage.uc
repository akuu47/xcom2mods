class X2Ability_SkirmisherAbilitySet_ConsistentElectricalDamage extends X2Ability_SkirmisherAbilitySet config(ConsistentElectricalDamage);

var config bool WHIPLASH_IGNORES_ARMOR;

static function array<X2DataTemplate> CreateTemplates()
{
	local array<X2DataTemplate> Templates;
	
	Templates.AddItem(Whiplash());

	return Templates; 
}

static function X2AbilityTemplate Whiplash()
{
	local X2AbilityTemplate                 Template;
	local X2Condition_UnitProperty          UnitPropertyCondition;
	local X2AbilityToHitCalc_StandardAim    StandardAim;
	local X2Effect_ApplyWeaponDamage		WeaponDamageEffect;
	local X2AbilityCharges					Charges;
	local X2AbilityCost_Charges				ChargeCost;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'Whiplash');
	Template.IconImage = "img:///UILibrary_XPACK_Common.PerkIcons.UIPerk_Whiplash";

	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_AlwaysShow;
	Template.Hostility = eHostility_Offensive;

	Charges = new class'X2AbilityCharges';
	Charges.InitialCharges = default.WHIPLASH_CHARGES;
	Template.AbilityCharges = Charges;

	ChargeCost = new class'X2AbilityCost_Charges';
	ChargeCost.NumCharges = 1;
	Template.AbilityCosts.AddItem(ChargeCost);

	Template.AbilityCosts.AddItem(default.FreeActionCost);

	Template.AbilityShooterConditions.AddItem(default.LivingShooterProperty);
	Template.AddShooterEffectExclusions();

	UnitPropertyCondition = new class'X2Condition_UnitProperty';
	Template.AbilityTargetConditions.AddItem(UnitPropertyCondition);

	Template.AbilityTargetConditions.AddItem(default.GameplayVisibilityCondition);

	Template.AbilityTargetStyle = new class'X2AbilityTarget_Single';
	Template.AbilityTriggers.AddItem(default.PlayerInputTrigger);

	// This will attack using the standard aim
	StandardAim = new class'X2AbilityToHitCalc_StandardAim';
	Template.AbilityToHitCalc = StandardAim;

	WeaponDamageEffect = new class'X2Effect_ApplyWeaponDamage';
	WeaponDamageEffect.bIgnoreArmor = default.WHIPLASH_IGNORES_ARMOR;
	WeaponDamageEffect.EffectDamageValue = default.WHIPLASH_BASEDAMAGE;
	Template.AddTargetEffect(WeaponDamageEffect);

	// Jwats: Double damage for robotic
	WeaponDamageEffect = new class'X2Effect_ApplyWeaponDamage';
	WeaponDamageEffect.bIgnoreArmor = true;		//	armor was applied the first time, don't let it be applied the second time as well -jbouscher
	WeaponDamageEffect.EffectDamageValue = default.WHIPLASH_BASEDAMAGE;
	UnitPropertyCondition = new class'X2Condition_UnitProperty';
	UnitPropertyCondition.ExcludeRobotic = false;
	UnitPropertyCondition.ExcludeOrganic = true;
	WeaponDamageEffect.TargetConditions.AddItem(UnitPropertyCondition);
	Template.AddTargetEffect(WeaponDamageEffect);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = TypicalAbility_BuildVisualization;
	Template.BuildInterruptGameStateFn = TypicalAbility_BuildInterruptGameState;
	Template.CustomFireAnim = 'HL_Whiplash';
//BEGIN AUTOGENERATED CODE: Template Overrides 'Whiplash'
	Template.bFrameEvenWhenUnitIsHidden = true;
	Template.ActivationSpeech = 'Whiplash';
//END AUTOGENERATED CODE: Template Overrides 'Whiplash'

	return Template;
}